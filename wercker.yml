box:
    id: golang
    ports:
        - "5000"

dev:

    steps:
        - internal/watch:
            code: |
                go build ./...
                ./source
            reload: true

# Build definition
build:
    steps:

    # golint step!
    - wercker/golint

    # Build the project
    - script:
        name: go build
        code: |
            -CGO_ENABLED=0 go build -a -o fun-with-golang ./...

    # Test the project
    - script:
        name: go test
        code: |
            go test ./...

    - script:
        name: ls-wercker-root
        code: |
            echo WERCKER_ROOT=$WERCKER_ROOT; ls -ls $WERCKER_ROOT
        
    - script:
        name: copy-output
        code: |
            mv fun-with-golang $WERCKER_OUTPUT_DIR
        
    - script:
        name: ls-wercker-output-dir
        code: |
            echo WERCKER_OUTPUT_DIR=$WERCKER_OUTPUT_DIR; ls -ls $WERCKER_OUTPUT_DIR

    - internal/docker-push:
        username: $DOCKERHUB_USERNAME
        password: $DOCKERHUB_PASSWORD
        cmd: /pipeline/output/fun-with-golang
        tag: latest
        repository: rikgibson/fun-with-golang
        ports: "5000"

push-scratch-docker:
    box: golang
    steps:
        - script:
            name: ls-wercker-root
            code: |
                echo WERCKER_ROOT=$WERCKER_ROOT; ls -ls $WERCKER_ROOT

        - internal/docker-scratch-push:
            username: $DOCKERHUB_USERNAME
            password: $DOCKERHUB_PASSWORD
            cmd: ./fun-with-golang
            tag: latest
            repository: rikgibson/fun-with-golang-scratch
            ports: "5000"

hello-world:
    steps:

    - script:
        name: hello-world
        code: echo $HELLO_MESSAGE